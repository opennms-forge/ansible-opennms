---
- name: Verify Ansible version
  ansible.builtin.assert:
    that:
      - ansible_version.full is version('2.11.0', '>=', version_type='semver')
    fail_msg: "You need at least Ansible 2.11 or greater to run these tasks. Your Ansible version is {{ ansible_version.full }}."
  tags:
    - dependency
    - ansible

- name: Include OpenNMS repository roles
  ansible.builtin.include_role:
    name: opennms_repositories

- name: Download PostgreSQL repository key
  ansible.builtin.get_url:
    url: "{{ pgsql_key_url }}"
    dest: /tmp/gpg.ACCC4CF8.key
    mode: "0644"
    checksum: "sha256:{{ pgsql_key_sha256 }}"
  tags:
    - opennms
    - postgresql
    - repository

- name: Convert the PostgreSQL repository key to GPG format
  ansible.builtin.command: "gpg --dearmor -o {{ pgsql_key_ring_file }} /tmp/gpg.ACCC4CF8.key"
  args:
    creates: "{{ pgsql_key_ring_file }}"
  register: pgsql_key_ring
  changed_when: pgsql_key_ring.rc != 0
  tags:
    - opennms
    - postgresql
    - repository

- name: Add PostgreSQL repo to sources list
  ansible.builtin.apt_repository:
    repo: deb [arch={{ arch }} signed-by={{ pgsql_key_ring_file }}] {{ pgsql_repo_url }} {{ ansible_distribution_release }}-pgdg main
    state: present
    update_cache: true
  tags:
    - opennms
    - postgresql
    - repository

- name: Install PostgreSQL Server {{ pg_version }}
  ansible.builtin.package:
    name: postgresql-{{ pg_version }}={{ pg_pkg_version }}
    state: present
  tags:
    - opennms
    - postgresql

- name: Configure PostgreSQL Server interface listening
  ansible.builtin.lineinfile:
    path: /etc/postgresql/15/main/postgresql.conf
    search_string: "#listen_addresses = 'localhost'"
    line: "listen_addresses = '{{ postgres_listen_addresses }}'"
  notify:
    - Restart postgresql
  tags:
    - opennms
    - postgresql

- name: Configure PostgreSQL authentication and access
  ansible.builtin.template:
    src: pg_hba.conf.j2
    dest: /etc/postgresql/15/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0640'
  notify:
    - Restart postgresql
  tags:
    - opennms
    - postgresql

- name: Enable and start systemd unit for PostgreSQL
  ansible.builtin.service:
    name: postgresql@{{ pg_version }}-main.service
    enabled: true
    state: started
  tags:
    - opennms
    - postgresql
    - systemd

- name: Install python3-psycopg2 dependency for PostgreSQL community module
  ansible.builtin.apt:
    name: python3-psycopg2
    state: present
  tags:
    - opennms
    - postgresql
    - ansible

- name: Install OpenNMS iplike store package
  ansible.builtin.apt:
    name: iplike-pgsql{{ pg_version }}
    state: present
  tags:
    - opennms
    - postgresql

- name: Set SCRAM-SHA-256 password encryption
  become: true
  become_user: postgres
  community.postgresql.postgresql_alter_system:
    param: password_encryption
    value: scram-sha-256
  notify:
    - Restart postgresql
  tags:
    - opennms
    - postgresql
    - initialize
    - credentials

- name: Set postgres admin password
  become: true
  become_user: postgres
  community.postgresql.postgresql_query:
    login_db: postgres
    query: "ALTER USER {{ postgres_user }} WITH PASSWORD '{{ postgres_password }}';"
  tags:
    - opennms
    - postgresql
    - initialize
    - credentials

- name: Create OpenNMS database user {{ opennms_datasource_db_user }}
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    state: present
    name: "{{ opennms_datasource_db_user }}"
    password: "{{ opennms_datasource_db_password }}"
  tags:
    - opennms
    - postgresql
    - initialize
    - database

- name: Create OpenNMS database {{ opennms_datasource_db_name }}
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    name: "{{ opennms_datasource_db_name }}"
    owner: "{{ opennms_datasource_db_user }}"
  tags:
    - opennms
    - postgresql
    - initialize
    - database

- name: Install iplike stored procedure in OpenNMS database
  become: true
  become_user: postgres
  community.postgresql.postgresql_query:
    db: "{{ opennms_datasource_db_name }}"
    # yamllint disable-line rule:line-length
    query: "CREATE OR REPLACE FUNCTION iplike(i_ipaddress text,i_rule text) RETURNS bool AS '/usr/lib/postgresql/{{ pg_version }}/lib/iplike.so' LANGUAGE 'c' RETURNS NULL ON NULL INPUT;"
  tags:
    - opennms
    - postgresql
    - iplike
    - credentials
