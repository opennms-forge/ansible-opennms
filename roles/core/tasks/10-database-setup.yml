---
- name: Configure OpenNMS data base connection
  ansible.builtin.template:
    src: etc/opennms-datasources.xml.j2
    dest: "{{ opennms_home }}/etc/opennms-datasources.xml"
    owner: opennms
    group: opennms
    mode: "0640"
  notify:
    - Restart opennms
  tags:
    - opennms
    - initialize

- name: Initialize secure vault with database postgres credentials
  become: true
  become_user: opennms
  ansible.builtin.command: "{{ opennms_home }}/bin/scvcli set postgres-admin {{ postgres_user }} {{ postgres_password }}"
  register: scv_postgres_admin
  changed_when: scv_postgres_admin.rc != 0
  tags:
    - opennms
    - initialize
    - credentials

- name: Initialize secure vault with database OpenNMS credentials
  become: true
  become_user: opennms
  ansible.builtin.command: "{{ opennms_home }}/bin/scvcli set postgres {{ opennms_datasource_db_user }} {{ opennms_datasource_db_password }}"
  register: scv_postgres_opennms
  changed_when: scv_postgres_opennms.rc != 0
  tags:
    - opennms
    - initialize
    - credentials

- name: Verify if database is already initialized
  ansible.builtin.stat:
    path: "{{ opennms_home }}/etc/configured"
  register: initialized_schema

- name: Create OpenNMS database user {{ opennms_datasource_db_user }}
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    state: present
    name: "{{ opennms_datasource_db_user }}"
    password: "{{ opennms_datasource_db_password }}"
  tags:
    - opennms
    - postgresql
    - initialize
    - database

- name: Create OpenNMS database schema
  become: true
  become_user: postgres
  community.postgresql.postgresql_schema:
    name: "{{ opennms_datasource_db_name }}"
    owner: "{{ opennms_datasource_db_user }}"
  tags:
    - postgresql
    - initialize

- name: Grant permissions to schema public
  become: true
  become_user: postgres
  community.postgresql.postgresql_query:
    db: "{{ opennms_datasource_db_name }}"
    query: "GRANT CREATE ON SCHEMA public TO PUBLIC;"
  tags:
    - postgresql
    - initialize

- name: Initialize database schema
  become: true
  become_user: opennms
  ansible.builtin.command: "{{ opennms_home }}/bin/install -dis"
  register: database_init
  when: not initialized_schema.stat.exists
  changed_when: database_init.rc != 0
  tags:
    - opennms
    - initialize
    - database
